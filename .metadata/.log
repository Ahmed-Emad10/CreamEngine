!SESSION 2021-06-05 11:05:12.380 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-05 11:05:36.194
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-05 11:05:36.195
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1827fc4e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c41a177,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-05 11:05:43.128
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-05 17:59:18.365 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-05 17:59:26.227
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-05 17:59:26.227
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19a7906c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1da5c19d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-05 17:59:31.392
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:13.936
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-05 19:22:13.942
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-05 19:22:13.944
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:14.007
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:22:14.009
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:22:14.010
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:15.350
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:22:15.355
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:22:15.358
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:15.408
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:22:15.410
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:22:15.411
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:16.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	           // System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-05 19:22:16.498
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-05 19:22:16.500
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:16.559
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	           // System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:22:16.562
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:22:16.563
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:18.055
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-05 19:22:18.057
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-05 19:22:18.059
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:22:18.115
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
                System.out.println(i+ " --> "+ Description.get(i));}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	myStat.executeUpdate(t2);
	            	
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:22:18.117
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:22:18.119
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:36:20.614
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
              //  System.out.println(i+ " --> "+ Description.get(i));
        	}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	        	
	        	
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	if(me.getKey().contains(","))
		        		me.getKey().replace("," , " ");
	            	
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	//myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	//myStat.executeUpdate(t2);
	               System.out.println(me.getKey());
	               //System.out.println(t2);
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-05 19:36:20.617
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-05 19:36:20.618
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:36:20.667
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
              //  System.out.println(i+ " --> "+ Description.get(i));
        	}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	        	
	        	
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	if(me.getKey().contains(","))
		        		me.getKey().replace("," , " ");
	            	
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	//myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	//myStat.executeUpdate(t2);
	               System.out.println(me.getKey());
	               //System.out.println(t2);
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:36:20.669
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:36:20.671
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-05 19:36:22.078
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package webcrawler;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import java.security.KeyPair;
import java.util.*;
import java.lang.ClassNotFoundException;
import opennlp.tools.stemmer.PorterStemmer ;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;


class Data {

    public  int doc_num;     public  int freq;
    public String url ;      public String descrition ;   public String title ;
    public Data() {  }
    public Data(int a , int b , String c, String d , String e)
    { doc_num = a ; freq = b ;  url = c ; descrition = d; title = e ; }

}

public class Indexer {
    static String [] stop_words  = new String [] { "a", "about" , "above" , "after" , "again" , "against", "all", "am" ,"an" ,
            "and" , "any" , "are" , "aren't" , "as" , "at" , "be","because" , "been" , "before" , "being" , "below" , "below" ,
            "between" , "both" , "but" , "by" , "can't" , "cannot" , "could" , "couldn't" , "did" , "didn't" ,  "do" , "does" ,
            "doesn't" , "doing" , "don't" ,"down" , "during" , "each" , "few" , "for" , "from" , "further" , "had" , "hadn't" ,
            "has" , "has" , "hasn't" , "have"  , "haven't" , "having" , "he" , "he'd" , "he'll" , "his"  , "how"  , "how's"   ,
            "i", "i'd", "i'll", "i'm", "i've", "if", "in" ,  "into", "is", "isn't", "it", "it's", "its", "itself", "me","more",
            "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only",  "or", "other" , "ought",
            "our", "ours", "ourselves", "your", "yours", "yourself" , "yourselves" , "why's", "with", "won't", "you've" ,
            "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't","so","some","such",
            "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's","these","they",
            "too", "under", "until" , "up", "very", "was", "wasn't", "we", "we'd", "we'll", "which", "while", "would","through",
            "to", "when's", "where", "wouldn't"  , "you", "you'd", "where's", "they'd", "they'll", "this", "when", "those","who",
            "they're", "they've", "we're", "you'll", "you're", "we've", "were", "weren't", "what", "what's", "he's","her","here",
            "here's", "hers", "herself", "him", "himself", "let's", "who's", "why", "whom" } ;

    static Map<String, Integer> stop_words_mp = new HashMap<String , Integer>();
    static Map<String, Vector<Data>> map = new HashMap<String, Vector<Data>>();
    static PorterStemmer stemmer = new PorterStemmer() ;
    // fill the two vectors from files

    static Vector<String> doc = new Vector<String>();
    static Vector<String> urls = new Vector<String>();
    static Vector<String> Description = new Vector<String>();
    static Vector<String> title = new Vector<String>();
    
    
    
    public  void Crawl_And_index() 
    {
        //new Crawler().Crawl(10 , true);
       

        File directory=new File("docs\\");
        int docNum= directory.list().length;

        System.out.println(docNum);

        for(File file : directory.listFiles()) {
            ArrayList<String> temp =readBody("docs\\"+file.getName());
            title.add(temp.get(0));
            Description.add( temp.get(1));
            urls.add(temp.get(2));
            doc.add(temp.get(3));
     
        }

        for (int i = 0; i < Description.size(); i++) {
              //  System.out.println(i+ " --> "+ Description.get(i));
        	}

        //hash the stop words in a map
        for(int i =0 ; i<stop_words.length; i++) {
            stop_words_mp.put(stop_words[i], 1);
        }
        
        int num = docNum ;
        for (int i = 0; i < num; i++) {
            try {
                fill_map(i);
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }
        }
        
       
      //-------------------database connection--------------------//
        String dburl="jdbc:mysql://localhost:3306/searchengine";
        String user="root";
        String password="asd123asd";
        try
        {
	        Connection myConn= DriverManager.getConnection(dburl,user,password);
	        Statement myStat=myConn.createStatement();
	        
	        
	        // print outputs
	        String t1;
	        String t2;
	        
	        for (Map.Entry<String, Vector<Data>> me : map.entrySet())
	        {
	        	
	        	
	            System.out.println (me.getKey() + ":");
	            Vector<Data> v = me.getValue();
	            for (int i = 0; i < v.size(); i++)
	            {
	            	if(me.getKey().contains(","))
		        		me.getKey().replace("," , " ");
	            	
	            	t1="insert into Pages values ("+v.get(i).doc_num+","+v.get(i).title+","+v.get(i).url+","+v.get(i).descrition+")";
	            	//myStat.executeUpdate(t1);
	            	
	            	t2="insert into Words values ("+me.getKey()+","+v.get(i).doc_num+","+v.get(i).freq+")";
	            	//myStat.executeUpdate(t2);
	               System.out.println(me.getKey());
	               //System.out.println(t2);
	              // System.out.println("doc num : " + v.get(i).doc_num + "   freq: " + v.get(i).freq + "   url : " + v.get(i).url +
	                        "  desc: " + v.get(i).descrition + "  title: " +  v.get(i).title );
	            }
	            System.out.println();
	        }
        }
        catch(SQLException e) { System.out.println("error in connection");
        	System.out.println(e.getMessage());}
    }
    
    
    //--------------------------MAIN------------------//
    public static void main(String[] args) throws IOException,SQLException {
    	
        new Indexer().Crawl_And_index();
        
        

    }


    static void fill_map(Integer doc_num) throws IOException {

        String words[] = doc.get(doc_num).split(" ");

        Vector<String> stemmed_words = new Vector<String>();

        // remove stop words and do stemming

        for (int i = 0; i < words.length; i++) {

            String s = stemmer.stem(words[i]);

            if (stop_words_mp.get(s) == null && s != "" )
                stemmed_words.add(s);

        }

        for (int i = 0; i < stemmed_words.size(); i++)
        {

            Vector<Data> v = map.get(stemmed_words.get(i));

            int freq = 1, set_index = 0;

            boolean already_exist = false;

            if (map.get(stemmed_words.get(i)) != null) {

                already_exist = true;

                for (int j = 0; j < v.size(); j++) {

                    if (v.get(j).doc_num == doc_num) {

                        set_index = j;
                        freq = v.get(j).freq + 1;
                        break;
                    }
                }
            }

            if (freq > 1)
            {
                v.set(set_index, new Data(doc_num, freq, urls.get(doc_num) ,Description.get(doc_num) , title.get(doc_num) ));
            }
            else
            {
                if (!already_exist)
                    v = new Vector<Data>() ;

                v.add(new Data(doc_num,  freq,urls.get(doc_num) , Description.get(doc_num) , title.get(doc_num) ) );
            }
            map.put(stemmed_words.get(i), v);
        }
    }
    
    public static  ArrayList<String> readBody(String fileName) {
        try {
            File myObj = new File(fileName);
            Scanner myReader = new Scanner(myObj);
            String body ="";
            ArrayList<String> s = new ArrayList<>();
            while (myReader.hasNextLine()) {
                s.add(myReader.nextLine()); // title
                s.add(myReader.nextLine()); // description
                s.add(myReader.nextLine()); // url
                while (myReader.hasNextLine()) {
                    String tmp =myReader.nextLine();
                    if(tmp.isEmpty())
                        continue;
                    body+=tmp;
                }
            }
            s.add(body);
            myReader.close();
            return s;
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred. while reading " + fileName);
            return null;
        }
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-05 19:36:22.080
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-05 19:36:22.081
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2141)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2934)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2986)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-06-06 00:42:47.914 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-06 00:42:53.283
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-06 00:42:53.283
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19a7906c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1da5c19d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-06 00:42:58.680
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-06 16:37:29.439 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-06 16:37:47.854
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-06 16:37:47.854
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5bde6148,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3cead673,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-06 16:37:53.173
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-06 21:44:58.918 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-06 21:45:08.174
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-06 21:45:08.175
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@516c20de,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6906be0f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-06 21:45:13.916
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-07 14:03:24.573 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-07 14:03:36.023
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-07 14:03:36.023
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6e49b011,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3a709cc7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-07 14:03:45.966
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-07 15:59:45.021 -----------------------------------------------
eclipse.buildId=4.19.0.I20210303-1800
java.version=16
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-07 15:59:57.187
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-07 15:59:57.187
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e706aa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25e6c22a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-07 16:00:07.862
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\ahmed'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
